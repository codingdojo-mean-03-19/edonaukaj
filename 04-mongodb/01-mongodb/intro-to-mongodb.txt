Assignment: Intro to MongoDB
----------------------------
1.Create a database called 'my_first_db'.

use my_first_db  //this line created a new db called my_first_db as it was required.
switched to db my_first_db //it appears after creating my_first_db db.




2.Create students collection.

db.createCollection('students') //creating students collection

3.Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})
4.Create 5 students with the appropriate info.

   db.students.insert({ name:'Edona', home_state:'Prizren', lucky_number:9, birthday: { month:7, day:19, year:1993 }})
   db.students.insert({ name:'Ana', home_state:'Califorina', lucky_number:7, birthday: { month:8, day:20, year:1992 }})
   db.students.insert({ name:'Gresa', home_state:'Washington', lucky_number:10, birthday: { month:4, day:12, year:1994 }})
   db.students.insert({ name:'Josh', home_state:'California', lucky_number:1, birthday: { month:11, day:22, year:1993 }})
   db.students.insert({ name:'Nora', home_state:'Washington', lucky_number:4, birthday: { month:3, day:13, year:1993 }})


5.Get all students.

  db.students.find()   //or
  db.students.find().pretty()


6.Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).

  db.students.find ({ home_state:'California', home_state:'Washington' })

7.Get all students whose lucky number is:
 1.greater than 3:
     db.students.find({lucky_number:{$gt:3}})
 2.less than or equal to 10:
       db.students.find({lucky_number:{$lte:10}})
     
 3.between 1 and 9 (inclusive):
        db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})
8.Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
 db.students.update({},{$set: {interests:['coding', 'brunch', 'MongoDB']}},{multi:true})

9.Add some unique interests for each particular student into each of their interest arrays.

   db.students.update({name: "Edona"},{$push: {interests:{$each:['reading', 'running']}}})
   db.students.update({name: "Gresa"},{$push: {interests:{$each:['shopping', 'travelling']}}})
   db.students.update({name: "Nora"},{$push: {interests:{$each:['walking', 'writing']}}})
   db.students.update({name: "Josh"},{$push: {interests:{$each:['football', 'outgoing']}}})
 
10.Add the interest 'taxes' into someone's interest array.

   db.students.update({name: 'Josh'},{$push: {interests: 'taxes'}})

11.Remove the 'taxes' interest you just added.

   db.students.update({name: 'Josh'},{$pull: {interests: 'taxes'}})

12.Remove all students who are from California.

  db.students.remove({home_state:'California', home_state:'Washington'})
13.Remove a student by name. 
  db.students.remove({name:'Edona'})

14.Remove a student whose lucky number is greater than 5 (JUST ONE)

  
15.Add a field to each student collection called 'number_of_belts' and set it to 0.
   db.students.update({},{$set: {"number_of_belts":0}},{multi:true})
16.Increment this field by 1 for all students in Washington (Seattle Dojo).
   db.students.update({home_state: "Washington"},{$inc: {number_of_belts: 1}},{multi:true})
17.Rename the 'number_of_belts' field to 'belts_earned'

   db.students.update({}, {$rename: {"number_of_belts":"belts_earned"}})

18.Remove the 'lucky_number' field.
 
   db.students.update({}, {$unset:{lucky_number:""}},{multi:true})

19.Add a 'updated_on' field, and set the value as the current date.

  db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})